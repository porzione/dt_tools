#!/usr/bin/env ruby
# frozen_string_literal: true

require 'oj'
require_relative 'models'

class Dumper
  def go
    data = {}
    FilmRoll.select(:id, :folder).order(:folder).each do |roll|
      d = roll.folder
      data[d] = {}
      Image
        .select(:id, :filename, :version, :write_timestamp, *DT::GEO)
        .where(film_id: roll.id)
        .order(:filename, :version)
        .each do |img|
        meta = {
          t: img.write_timestamp,
          k: get_meta_k(img.id)
        }
        geo = img.to_hash.slice(*DT::GEO).values.compact.map(&:to_s)
        meta[:geo] = geo unless geo.empty?
        tags = get_tags(img.id)
        f = img.filename
        data[d][f] ||= {}
        data[d][f][img.version] = meta
        data[d][f][img.version][:tags] = tags unless tags.empty?
      end
    end
    puts Oj.dump(data, indent: 2, mode: :compat)
  end

  private

  def get_tags(imgid)
    UsedTag
      .select(:name)
      .join(:tagged_images, tagid: :id)
      .where(imgid: imgid)
      .map(&:name)
      .reject { |t| t.match?(/^darktable\|.+/) }
      .sort
  end

  def get_meta_k(imgid)
    MetaData.where(id: imgid).as_hash(:key, :value)
  end
end

Dumper.new.go
