#!/usr/bin/env ruby
# frozen_string_literal: true

require 'oj'
require_relative 'models'

class Dumper
  def go
    data = {}
    FilmRoll.select(:id, :folder).order(:folder).each do |r|
      data[r.folder] = {}
      Image
        .select(:id, :filename, :version, :write_timestamp, *DT::GEO)
        .where(film_id: r.id)
        .order(:filename, :version)
        .each do |i|
        meta = {
          t: i.write_timestamp,
          k: get_meta_k(i.id)
        }
        geo = i.to_hash.slice(*DT::GEO).values.compact.map(&:to_s)
        meta[:geo] = geo unless geo.empty?
        tags = get_tags(i.id)
        meta[:tags] = tags unless tags.empty?
        data[r.folder][i.filename] ||= {}
        data[r.folder][i.filename][i.version] = meta
      end
    end
    puts Oj.dump(data, indent: 2, mode: :compat)
  end

  private

  def get_tags(imgid)
    UsedTag
      .select(:name)
      .join(:tagged_images, tagid: :id)
      .where(imgid: imgid)
      .map(&:name)
      .reject { |t| t.match?(/^darktable\|.+/) }
      .sort
  end

  def get_meta_k(imgid)
    MetaData.where(id: imgid).as_hash(:key, :value)
  end
end

Dumper.new.go
