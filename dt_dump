#!/usr/bin/env ruby
# frozen_string_literal: true

require 'oj'
require_relative 'models'

def get_tags(imgid)
  tids = TaggedImage
         .where(imgid: imgid)
         .select_map(:tagid)
  UsedTag
    .where(id: tids)
    .select_map(:name)
    .reject { |t| t.match?(/^darktable\|.+/) }
end

def get_meta_k(imgid)
  MetaData
    .where(id: imgid)
    .select_map(%i[key value])
    .to_h
end

data = {}

FilmRoll.order(:folder).all do |roll|
  d = roll.folder
  data[d] = {}
  Image
    .select(:id, :filename, :version, :write_timestamp, *Image::GEO)
    .where(film_id: roll.id)
    .order(:filename, :version)
    .each do |img|
    meta = {
      t: img.write_timestamp,
      k: get_meta_k(img.id)
    }
    geo = img.to_hash.slice(*Image::GEO).values.compact.map(&:to_s)
    meta[:geo] = geo unless geo.empty?
    tags = get_tags(img.id)
    f = img.filename
    data[d][f] ||= {}
    data[d][f][img.version] = meta
    data[d][f][img.version][:tags] = tags unless tags.empty?
  end
end

puts Oj.dump(data, indent: 2, mode: :compat)
